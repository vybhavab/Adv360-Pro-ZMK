#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/rgb.h>
#include <dt-bindings/zmk/backlight.h>

#define DEFAULT 0
#define GAMING 1
#define FN 2
#define MOD 3

#define HYP LS(LC(LA(LGUI)))
#define HYPER(key) LS(LC(LA(LG(key))))

#define MEH LS(LC(LALT))
#define MEH_KEY(key) LS(LC(LA(key)))

/ {
  macros {
    prev_desktop: prev_desktop {
      label = "MAC_PREV_DESKTOP";
      compatible = "zmk,behavior-macro";
      #binding-cells = <0>;
      bindings
        = <&macro_press &kp LCTRL>
        , <&macro_tap &kp LEFT>
        , <&macro_release &kp LCTRL>
        ;
    };

    next_desktop: next_desktop {
      label = "MAC_NEXT_DESKTOP";
      compatible = "zmk,behavior-macro";
      #binding-cells = <0>;
      bindings
        = <&macro_press &kp LCTRL>
        , <&macro_tap &kp RIGHT>
        , <&macro_release &kp LCTRL>
        ;
    };

    discord_mute: discord_mute {
      label = "MUTE_DISCORD";
      compatible = "zmk,behavior-macro";
      #binding-cells = <0>;
      bindings
        = <&macro_press &kp LGUI>
        , <&macro_press &kp LCTRL>
        , <&macro_press &kp LSHIFT>
        , <&macro_tap &kp F16>
        , <&macro_release &kp LSHIFT>
        , <&macro_release &kp LCTRL>
        , <&macro_release &kp LGUI>
        ;
    };

  };

    behaviors {
      #include "macros.dtsi"
      #include "version.dtsi"
      #ifndef VERSION_MACRO
      macro_ver: macro_ver {
        compatible = "zmk,behavior-macro";
        label = "macro_version";
        #binding-cells = <0>;
        bindings = <&kp RET>;
      };
      #endif
      pipe_grave: pipe_override {
          compatible = "zmk,behavior-mod-morph";
          label = "PIPE_GRAVE";
          #binding-cells = <0>;
          bindings = <&kp PIPE>, <&kp GRAVE>;
          mods = <(MOD_LSFT|MOD_RSFT)>;
      };

      plus_one: plus_override {
          compatible = "zmk,behavior-mod-morph";
          label = "PLUS_ONE";
          #binding-cells = <0>;
          bindings = <&kp PLUS>, <&kp N1>;
          mods = <(MOD_LSFT|MOD_RSFT)>;
      };

      lbrc_two: lbrc_override {
          compatible = "zmk,behavior-mod-morph";
          label = "LBRC_TWO";
          #binding-cells = <0>;
          bindings = <&kp LEFT_BRACKET>, <&kp N2>;
          mods = <(MOD_LSFT|MOD_RSFT)>;
      };

      lcbr_three: lcbr_override {
          compatible = "zmk,behavior-mod-morph";
          label = "LCBR_THREE";
          #binding-cells = <0>;
          bindings = <&kp LEFT_BRACE>, <&kp N3>;
          mods = <(MOD_LSFT|MOD_RSFT)>;
      };

      lprn_four: lprn_override{
          compatible = "zmk,behavior-mod-morph";
          label = "LPRN_FOUR";
          #binding-cells = <0>;
          bindings = <&kp LEFT_PARENTHESIS>, <&kp N4>;
          mods = <(MOD_LSFT|MOD_RSFT)>;
      };

      ampr_five: ampr_override {
          compatible = "zmk,behavior-mod-morph";
          label = "AMPR_FIVE";
          #binding-cells = <0>;
          bindings = <&kp AMPERSAND>, <&kp N5>;
          mods = <(MOD_LSFT|MOD_RSFT)>;
      };

      equal_six: equal_override {
          compatible = "zmk,behavior-mod-morph";
          label = "EQUAL_SIX";
          #binding-cells = <0>;
          bindings = <&kp EQUAL>, <&kp N6>;
          mods = <(MOD_LSFT|MOD_RSFT)>;
      };

      rprn_seven: rprn_override {
          compatible = "zmk,behavior-mod-morph";
          label = "RPRN_SEVEN";
          #binding-cells = <0>;
          bindings = <&kp RIGHT_PARENTHESIS>, <&kp N7>;
          mods = <(MOD_LSFT|MOD_RSFT)>;
      };

      rcbr_eight: rcbr_override {
          compatible = "zmk,behavior-mod-morph";
          label = "RCBR_EIGHT";
          #binding-cells = <0>;
          bindings = <&kp RIGHT_BRACE>, <&kp N8>;
          mods = <(MOD_LSFT|MOD_RSFT)>;
      };

      rbrc_nine: rbrc_override {
          compatible = "zmk,behavior-mod-morph";
          label = "RBRC_NINE";
          #binding-cells = <0>;
          bindings = <&kp RIGHT_BRACKET>, <&kp N9>;
          mods = <(MOD_LSFT|MOD_RSFT)>;
      };

      astr_zero: astr_override {
          compatible = "zmk,behavior-mod-morph";
          label = "ASTR_ZERO";
          #binding-cells = <0>;
          bindings = <&kp ASTRK>, <&kp N0>;
          mods = <(MOD_LSFT|MOD_RSFT)>;
      };

      exlm_perc: exlm_override {
          compatible = "zmk,behavior-mod-morph";
          label = "EXLM_PERC";
          #binding-cells = <0>;
          bindings = <&kp EXCLAMATION>, <&kp PRCNT>;
          mods = <(MOD_LSFT|MOD_RSFT)>;
      };

      bsls_hash: bsls_override {
          compatible = "zmk,behavior-mod-morph";
          label = "BSLS_HASH";
          #binding-cells = <0>;
          bindings = <&kp BSLH>, <&kp HASH>;
          mods = <(MOD_LSFT|MOD_RSFT)>;
      };

      at_crt: at_override {
          compatible = "zmk,behavior-mod-morph";
          label = "AT_CRT";
          #binding-cells = <0>;
          bindings = <&kp AT>, <&kp CARET>;
          mods = <(MOD_LSFT|MOD_RSFT)>;
      };

      dlr_tild: dlr_override {
          compatible = "zmk,behavior-mod-morph";
          label = "DLR_TILD";
          #binding-cells = <0>;
          bindings = <&kp DOLLAR>, <&kp TILDE>;
          mods = <(MOD_LSFT|MOD_RSFT)>;
      };


      hm: homerow_mods {
          compatible = "zmk,behavior-hold-tap";
          label = "HOMEROW_MODS";
          #binding-cells = <2>;
          tapping-term-ms = <200>;
          quick_tap_ms = <175>;
          flavor = "tap-preferred";
          bindings = <&kp>, <&kp>;
      };
    };

  keymap {
    compatible = "zmk,keymap";

    default_layer {
      bindings = <
        &pipe_grave                       &plus_one    &lbrc_two   &lcbr_three   &lprn_four     &ampr_five &kp C_PP                                                                                             &kp LC(LG(Q))      &equal_six &rprn_seven &rcbr_eight    &rbrc_nine   &astr_zero   &kp MINUS
        &kp TAB                           &kp Q        &kp W       &kp E         &kp R          &kp T      &tog GAMING                                                                                          &discord_mute      &kp Y      &kp U       &kp I          &kp O        &kp P        &bsls_hash
        &kp ESC                           &kp A        &kp S       &kp D         &kp F          &kp G      &kp DEL                   &kp C_PREV        &kp C_NEXT            &kp C_VOLUME_DOWN  &kp C_VOLUME_UP &kp C_MUTE         &kp H      &kp J       &kp K          &kp L        &kp SEMI     &lt FN SQT
        &mt LSHFT LEFT_PARENTHESIS        &kp Z        &kp X       &kp C         &kp V          &kp B                                                  &prev_desktop         &next_desktop                                         &kp N      &kp M       &kp COMMA      &kp DOT      &kp FSLH     &mt RSHFT RIGHT_PARENTHESIS
        &kp LS(LC(LA(LGUI)))              &dlr_tild    &mo MOD     &kp LEFT      &kp RIGHT                                 &kp BSPC  &kp LEFT_COMMAND  &kp LEFT_CONTROL      &kp LEFT_ALT       &kp ENTER  &kp SPACE                          &kp UP      &kp DOWN       &exlm_perc   &at_crt      &kp LS(LC(LALT))
      >;
    };

    gaming {
      bindings = <
        &trans                            &kp N1        &kp N2     &kp N3        &kp N4          &kp N5    &trans                                                                                               &trans              &kp N6     &kp N7      &kp N8         &kp N9       &kp N0       &trans
        &trans                            &trans        &trans     &trans        &trans          &trans    &trans                                                                                               &trans              &trans     &trans      &trans         &trans       &trans       &trans
        &trans                            &trans        &trans     &trans        &trans          &trans    &trans                    &trans             &trans                &trans              &trans        &trans              &trans     &trans      &trans         &trans       &trans       &trans
        &kp LSHIFT                        &trans        &trans     &trans        &trans          &trans                                                 &trans                &trans                                                &trans     &trans      &trans         &trans       &trans       &trans
        &kp LEFT_CONTROL                  &trans        &trans     &trans        &kp LEFT_ALT                      &kp SPACE &trans  &trans             &trans                &trans              &kp BSPC      &trans &trans &trans  &trans  &trans
      >;
    };

    fn {
      bindings = <
        &kp F1 &kp F2 &kp F3 &kp F4 &kp F5 &kp F6 &tog 1                                           &mo 3 &kp F7 &kp F8 &kp F9 &kp F10 &kp F11 &kp F12
        &trans &trans &trans &trans &trans &trans  &none                                           &none &trans &trans &trans &trans  &trans  &trans
        &trans &trans &trans &trans &trans &trans  &none        &trans &trans &trans &trans        &none &trans &trans &trans &trans  &trans  &trans
        &trans &trans &trans &trans &trans &trans                      &trans &trans                     &trans &trans &trans &trans  &trans  &trans
        &trans &trans &trans &trans &trans               &trans &trans &trans &trans &trans &trans              &trans &trans &trans  &trans  &trans
      >;
    };
    mod {
      bindings = <
        &none &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4 &none                                                                     &trans                 &none        &none        &none        &none &none &none
        &none &tog DEFAULT &tog GAMING  &none        &none        &none        &bootloader                                                               &bootloader            &none        &none        &none        &none &none &none
        &none &none        &none        &none        &none        &none        &none                   &none &none &bt BT_CLR &none                      &rgb_ug RGB_MEFS_CMD 5 &none        &none        &none        &none &none &none
        &none &none        &none        &none        &macro_ver   &none                                      &none &none                                                        &none        &none        &none        &none &none &none
        &none &none        &none        &none        &none                                       &none &none &none &none      &bl BL_TOG &rgb_ug RGB_TOG                                     &bl BL_INC   &bl BL_DEC   &none &none &none
      >;
    };
  };
};
